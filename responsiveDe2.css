/*Responsive design es una metodologia o tecnica que se usa en css y tmb en JS para adapar las resoluciones a cualquier dispositivo*/
/*los  media queries o "@media" son para consultar y validar el ancho y alto de la ventana grafica, ancho y alto del dispositivo, orientacion (horizontal o vetical), resolucion. Funciona 
como condicionales, si el ancho o alto de la ventana es tal, que se haga tal cosa.
 Hay 4 tipos de media queries: all (apto para todos dispositivos), print (para material impreso y visualizacion de documentos en una pantalla en el modo de vista previa a impresion), 
 screen (destinado principamlente a pantallas), y speach (para sintetizadores de voz).
 El que vamos a aprender es screen, el mas utilizado.
 
 Despues hay operadores logicos: and y or. Sinven para las condiciones.
 Orientacion landscape (caundo es mas ancho que largo) y portrait (cuando es mas largo que ancho)*/

/*hay 2 tipos de tecnologias para trabajar con responsive.
Mobile first: crea una web primero para mobile y despues hacer que se adapte a resoluciones mayores.
Desktop first: hacer una web de escritorio y que se adapte a resoluciones mas peque√±as
Lo mas recomendado ahora es trabajar con mobile first.
Content first: no es responisve como tal pero es una metodologia. Es agarrar un contenido y reestructurarlo, no importa su destino (mobile o desktop)*/

.header, .main, .aside, .footer {
    padding: 20px;
}

.content {
    display: flex;
    flex-direction: column;                          /*para que el main axis sea vertical y los elementos se comporten como columnas*/
    height: 100vh;
}

.header {
    background: lightblue;
    flex-basis: 60px;
}

.main {
    background: slateblue;
    flex-basis: 300px;
    flex-grow: 2;
    flex-shrink: 0;
}

.aside {
    background: darkslateblue;
    flex-basis: 200px;
    flex-grow: 1;
    flex-shrink: 0;

}

.footer {
    background: violet;
    flex-grow: 1;
    
}

/*responsive con flex:*/

/*@media screen and (min-width: 700px) {     */              /*estamos diciendo: la condicion es que sea una pantalla (screen), Y ademas que tenga como minimo  400px de width, si se
                                                              cumple, vamos a realizar algo, y con el and agregamos otra condicion.*/
                                                             /*media es la regla de css que llamamos con el @, el screen es el tipo de media (puede ser all, print y speach)*/
    /*.content {
    flex-direction: row;                                  /*para que los elementos se comporten como filas */
    /*flex-wrap: wrap;
    }

    .main, .aside {
        height: 645px;
    }

    .main {
        flex-grow: 4;
    }
    .aside {
        flex-grow: 1;
    }

    .header {
        flex-basis: 100%;
        max-height: 60px;
    }
    .footer {
    flex-basis: 100%;    
    }
} */

/*responsive con grid:*/

@media screen and (min-width: 700px) { 

    .content {
        display: grid;                              
        grid-template-rows: 80px 1fr 1fr 1fr 1fr 80px;
        grid-template-columns: repeat(3, 1fr);
    
    }
    
    .header {
          grid-column: 1/ span 3;
    }
    
     .main {
         grid-row: 2/6;  
         grid-column: 1/ span 2;
    }
    .aside {
         grid-row: 2/6;  
    }
    
  
    .footer {
        grid-row: 6/7; 
        grid-column: 1 / span 3;  
    }

}



